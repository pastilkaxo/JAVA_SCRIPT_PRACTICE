// zad 1 

let first = new RegExp()
first  = /a.b/s.test('a\nb')
console.log(first)

// zad 2

/* Дело в том, что в javascript мультилайн режим (флаг m) влияет только на символы ^ и $, 
которые начинают матчиться с началом и концом строки, а не всего текста.
Точка по-прежнему – любой символ, кроме новой строки. В javascript нет флага,
 который устанавливает мультилайн-режим для точки. Для того, чтобы заматчить совсем что угодно – используйте [\s\S].*/

function bbtagit(text) {
    text = text.replace(/\[u\]([\s\S]*)\[\/u\]/gim, '<u>$1</u>')
  
    return text
  }
  
  var line = "[u]мой\n текст[/u]"
  alert(bbtagit(line))


  // zad 3






  var text = '1 <A href="#">...</A> 2'
text = text.replace(/<A(.*?)>/, 'TEST')
alert(text)


// zad 4
/* 

i
С этим флагом поиск не зависит от регистра: нет разницы между A и a (см. пример ниже).
g
С этим флагом поиск ищет все совпадения, без него – только первое.
m
Многострочный режим (рассматривается в главе Многострочный режим якорей ^ $, флаг "m").
s
Включает режим «dotall», при котором точка . может соответствовать символу перевода строки \n (рассматривается в главе Символьные классы).
u
Включает полную поддержку Юникода. Флаг разрешает корректную обработку суррогатных пар (подробнее об этом в главе Юникод: флаг "u" и класс \p{...}).
y
Режим поиска на конкретной позиции в тексте (описан в главе Поиск на заданной позиции, флаг "y")

*/

// $<Name>	Вставляет именованную группу захвата, где Nameнаходится имя группы.

let buff = /(?<firstName>[A-Za-z]+) (?<lastName>[A-Za-z]+$)/u


console.log('Vlad Lemiasheusky'.replace( buff , '$<lastName> , $<firstName>'))


// zad 5


let {BMW,count , ...other} = {
BMW:1,
model:"F90",
cost:"95000$",
count:5
}

console.log(other)


// zad 6

let {cost2,...other2} = {
    cost2:"100000$",
    year:1980,
    dvig:"2JZ"
}
const car = {name:"Toyota" };
const model = {mod:"Supra" };
const fullCar = {...car,...model,...other2 };
console.log(fullCar)
